 @model MyStore.Domain.Entities.Product
@using System.Data;

@{
    ViewBag.Title = "Edit";
}
@{
    Layout = "";
}
<head>
    <link href="~/Scripts/StyleSheet1.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />


    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>



</head>
<!--

    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/1.12.1/jquery.min.js"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
    -->
<body>
    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Product</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.id_product)

            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.id_manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.id_manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.id_manufacturer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.on_sale, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.on_sale)
                        @Html.ValidationMessageFor(model => model.on_sale, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.additional_shipping_cost, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.additional_shipping_cost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.additional_shipping_cost, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.reference, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.reference, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.reference, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.width, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.width, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.width, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.height, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.height, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.height, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.depth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.depth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.depth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.weight, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.quantity_discount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.quantity_discount)
                        @Html.ValidationMessageFor(model => model.quantity_discount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.available_date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.available_date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.available_date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description_short, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description_short, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description_short, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            @{ Html.RenderAction("All", "Products", new { id = Model.id_product }); }

            @*{ Html.RenderAction("LinkCategory", "Products", new { id = Model.id_product }); }*@

            <div id="data">
                <ul>
                    <li>
                        Home
                        <ul>
                            @*for (int ii = 1; ii < 100; ii++)*@

                            @for (int i = 1; i < ViewBag.Count; i++)
                            {
                                if (ViewBag.Data.Rows[i]["id_parent"].ToString() == ViewBag.Index.ToString())
                                {
                                    <li>
                                        @{
                                            DataTable cp = ViewBag.cp;
                                            if (cp.AsEnumerable().Any(row => ViewBag.Data.Rows[i]["name"].ToString() == row.Field<String>("name")))
                                            {
                                                <a class="jstree-clicked">@ViewBag.Data.Rows[i]["name"].ToString()</a>
                                            }
                                            else
                                            {
                                                <a>@ViewBag.Data.Rows[i]["name"].ToString()</a>
                                            }
                                        }
                                        <ul>
                                            @for (int j = i; j < ViewBag.Count; j++)
                                            {
                                                if (ViewBag.Data.Rows[j]["id_parent"].ToString() == ViewBag.Data.Rows[i]["id_category"].ToString())
                                                {
                                                    <li>
                                                        @{
                                                            if (cp.AsEnumerable().Any(row => ViewBag.Data.Rows[j]["name"].ToString() == row.Field<String>("name")))
                                                            {
                                                                <a class="jstree-clicked">@ViewBag.Data.Rows[j]["name"].ToString()</a>
                                                            }
                                                            else
                                                            {
                                                                <a>@ViewBag.Data.Rows[j]["name"].ToString()</a>
                                                            }
                                                        }
                                                        <ul>
                                                            @for (int k = j; k < ViewBag.Count; k++)
                                                            {
                                                                if (ViewBag.Data.Rows[k]["id_parent"].ToString() == ViewBag.Data.Rows[j]["id_category"].ToString())
                                                                {
                                                                    <li>
                                                                        @{
                                                                            if (cp.AsEnumerable().Any(row => ViewBag.Data.Rows[k]["name"].ToString() == row.Field<String>("name")))
                                                                            {
                                                                                <a class="jstree-clicked">@ViewBag.Data.Rows[k]["name"].ToString()</a>
                                                                            }
                                                                            else
                                                                            {
                                                                                <a>@ViewBag.Data.Rows[k]["name"].ToString()</a>
                                                                            }
                                                                        }
                                                                    </li>
                                                                }
                                                            }
                                                        </ul>
                                                    </li>
                                                }
                                            }
                                        </ul>
                                    </li>
                                                }
                                            }
                        </ul>
                    </li>
                </ul>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <select id="id_cat">
                        <option> </option>
                    </select>
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="btn" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
                                            }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    <script>
        $(document).ready(function () {
            $('#data').jstree({
                "plugins": ["checkbox"],
            });
            $('#data').jstree('open_all');
            $("#data").on("changed.jstree", function (e, data) {
                if (data.selected.length) {
                    $("#id_cat").empty();
                    $(data.selected).each(function (idx) {
                        var node = data.instance.get_node(data.selected[idx]);
                        var s = document.getElementById('id_cat');
                        s.options[s.options.length] = new Option(node.text, '1');
                    });
                }
                else
                    $("#id_cat").empty();

                var values = $('#id_cat option');
                var optionsData = $.map(values, function (option) {
                    return option.text;
                });
                /*
                $.ajax({
                    type: "POST",
                    url: "/Products/GetSelectedCategories",
                    datatype: "text",
                    data: JSON.stringify(optionsData), //pass this variable to post request as 'options'
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        //alert('Success'); //.html(data);
                    },
                    error: function () {
                        alert('ERROR'); //$("#testarea").html("ERROR");
                    }
                });
                */

            });
        });
    </script>
</body>
<script>
    /*
    $("#btn").click(function () {
        $.ajax({
            type: "POST",
            datatype: "text",
            url: "/Products/GetSelectedCategory",
            data: { "selectedItem": $('#id_cat option:selected').text() },
            success: function (data) {
                //alert('Success'); //.html(data);
            },
            error: function () {
                alert('ERROR'); //$("#testarea").html("ERROR");
            }
        });
    });
    */
    $(".btn").click(function () {
        var values = $('#id_cat option');
        var optionsData = $.map(values, function (option) {
            return option.text;
        });
        $.ajax({
            type: "POST",
            url: "/Products/GetSelectedCategories",
            datatype: "text",
            data: JSON.stringify({
                options: optionsData,
                selected: $("#id_cat option:selected").text()
            }), //pass this variable to post request as 'options'
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                //alert('Success'); //.html(data);
            },
            error: function () {
                alert('ERROR'); //$("#testarea").html("ERROR");
            }
        });
    });

</script>












